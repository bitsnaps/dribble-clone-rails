document.addEventListener('turbolinks:load', function() {
  // console.log('Bulma');
  var Shots = {
    previewShot(){
      if (window.File && window.FileList && window.FileReader){

        function handleFileSelect(evt) {
          evt.stopPropagation();
          evt.preventDefault();
          var files = evt.target.files | evt.dataTransfer.files;
          // files is FileList of File objects. List properties here.
          for (var i = 0, f; f = files[i]; i++) {
            // Only process image files
            if (!f.type.match('image.*')) {
              continue;
            }
            const reader = new FileReader();
            // Closure to capture the file information
            reader.onload = (function (theFile) {
              return function (e) {
                // Render thumbnail
                var span = document.createElement('span');
                span.innerHTML = ['<img class="thumbnail" src="', e.target.result, '" title="', escape(theFile), '" />'].join('');
                document.getElementById('list').insertBefore(span, null);
              };
            })(f);
            reader.readAsDataURL(f);
          }
        }

        function handleDragOver(evt) {
          evt.stopPropagation();
          evt.preventDefault();
          evt.dataTransfer.dropEffect = 'copy';
        }

        const dropZone = document.getElementById('drop_zone');
        const target = document.documentElement;
        const fileInput = document.getElementById('shot_user_shot'); // generated by rails
        const previewImage = document.getElementById('previewImage');
        const newShotForm = document.getElementById('new_shot');

        if (dropZone){
          dropZone.addEventListener('dragover', handleDragOver, false);
          dropZone.addEventListener('drop', handleFileSelect, false);
        }

        if (dropZone)
        dropZone.addEventListener('dragover', (e) => {
          dropZone.classList.add('fire');
        }, false);

        if (dropZone) dropZone.addEventListener('dragleave', (e) => {
          dropZone.classList.remove('fire');
        }, false);

        if (dropZone) dropZone.addEventListener('drop', (e) => {
          e.preventDefault();
          dropZone.classList.remove('fire');
          fileInput.files = e.dataTransfer.files;
          // if on shot/id/edit hide preview image on drop
          if (previewImage){
            previewImage.style.display = 'none';
          }
          if (newShotForm){
            dropZone.style.display = 'none';
          }
        }, false);

        // Body specific
        target.addEventListener('dragover', (e) => {
          e.preventDefault();
          dropZone.classList.add('dragging');
        }, false);

        // removes dragging class to body when NOT dragging
        target.addEventListener('dragleave', (e) => {
          dropZone.classList.remove('dragging');
          dropZone.classList.remove('fire');
        }, false);
      }
    }

  };
  Shots.previewShot();
});

/*/ ======================

$(function () {
  console.log('Bootstrap');
  var dropZone = document.getElementById('drop_zone');
  var uploadForm = document.getElementById('new_shot');

  var startUpload = function(files) {
      console.log(files)
  }

  uploadForm.addEventListener('submit', function(e) {
      var uploadFiles = document.getElementById('shot_user_shot').files;
      e.preventDefault()

      startUpload(uploadFiles)
  })

  dropZone.ondrop = function(e) {
      e.preventDefault();
      this.className = 'upload-drop-zone';

      startUpload(e.dataTransfer.files)
  }

  dropZone.ondragover = function() {
      this.className = 'upload-drop-zone drop';
      return false;
  }

  dropZone.ondragleave = function() {
      this.className = 'upload-drop-zone';
      return false;
  }

});*/
